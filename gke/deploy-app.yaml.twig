apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  name: "{{REPO_NAME_SHORT}}{{ENVIRONMENT}}"
  labels:
    app: "{{REPO_NAME_SHORT}}{{ENVIRONMENT}}"
spec:
  replicas: {{REPLICAS}}
  selector:
    matchLabels:
      app: "{{REPO_NAME_SHORT}}{{ENVIRONMENT}}"
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: "{{REPO_NAME_SHORT}}{{ENVIRONMENT}}"
        service: "{{REPO_NAME_SHORT}}{{ENVIRONMENT}}"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - "{{REPO_NAME_SHORT}}{{ENVIRONMENT}}"
            topologyKey: "kubernetes.io/hostname"
      initContainers:
        - image: "eu.gcr.io/{{PROJECT_ID}}/{{REPO_NAME}}/{{ENVIRONMENT}}:latest"
          name: drupal-init
          resources:
            requests:
              cpu: "50m"
              memory: "512Mi"
          securityContext:
            runAsUser: 0
            runAsNonRoot: false
          command:
            - "/var/www/html/gke/initpod.sh"
          env: &drupal-env
            - name: PROJECT_ID
              value: "{{PROJECT_ID}}"
            - name: ENVIRONMENT
              value: "{{ENVIRONMENT}}"
            - name: REPLICAS
              value: "{{REPLICAS}}"
            - name: REPO_NAME
              value: "{{REPO_NAME_SHORT}}"
            - name: BRANCH_NAME
              value: "{{BRANCH_NAME}}"
            - name: SHORT_SHA
              value: "{{SHORT_SHA}}"
            - name: TAG_NAME
              value: "{{TAG_NAME}}"
            - name: COMMITMSG
              value: '{{COMMITMSG_YML|raw}}'
            - name: PHP_FPM_PM_START_SERVERS
              value: "8"
            - name: PHP_FPM_PM_MIN_SPARE_SERVERS
              value: "8"
            - name: PHP_FPM_PM_MAX_SPARE_SERVERS
              value: "12"
            - name: PHP_FPM_PM_MAX_CHILDREN
              value: "20"
            - name: PHP_OPCACHE_MEMORY_CONSUMPTION
              value: "256"
            - name: PHP_OPCACHE_MAX_ACCELERATED_FILES
              value: "6144"
            - name: PHP_REALPATH_CACHE_SIZE
              value: 1M
            - name: PHP_MEMORY_LIMIT
              value: 512M
            - name: PHP_FPM_CLEAR_ENV
              value: "no"
            - name: KUBER
              value: "true"
            - name: PHP_SITE_NAME
              value: "{{REPO_NAME_SHORT}}"
            - name: PHP_HOST_NAME
              value: localhost:8000
            - name: PHP_SENDMAIL_PATH
              value: /usr/sbin/sendmail -t -i
            - name: DB_HOST
              value: "127.0.0.1"
            - name: DB_PORT
              value: "3306"
            - name: DB_NAME
              value: "{{DATABASE_NAME}}"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "cloudsql-db-{{REPO_NAME_SHORT}}"
                  key: password
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: "cloudsql-db-{{REPO_NAME_SHORT}}"
                  key: username
            - name: SLACK_BOT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: slack-bot-token
                  key: token
          volumeMounts:
            - mountPath: /cloudsql
              name: cloudsql
            - mountPath: /secrets/cloudsql
              name: cloudsql-instance-credentials
              readOnly: true
            - mountPath: /etc/ssl/certs
              name: ssl-certs
            - mountPath: /mnt/share
              name: pod-share
      containers:
        # [nginx]
        - image: wodby/nginx:1.16
          resources:
            requests:
              cpu: "20m"
              memory: "30Mi"
          env:
          - name: NGINX_VHOST_PRESET
            value: "drupal8"
          - name: DRUPAL_VERSION
            value: "8"
          - name: NGINX_SERVER_NAME
            value: localhost
          - name: NGINX_SET_REAL_IP_FROM
            value: '10.0.0.0/8'
          - name: "NGINX_REAL_IP_RECURSIVE"
            value: "on"
          - name : "NGINX_REAL_IP_HEADER"
            value: "X-Forwarded-For" # X-Real-IP
          - name: "NGINX_LOG_FORMAT_SHOW_REAL_IP"
            value: "on"
          - name: NGINX_SERVER_EXTRA_CONF_FILEPATH
            value: /config/nginx.conf
          - name: NGINX_UPSTREAM_NAME
            value: "{{REPO_NAME_SHORT}}"
          - name: NGINX_BACKEND_HOST
            value: localhost
          - name: NGINX_SERVER_ROOT
            value: /var/www/html/web
          - name: NGINX_CLIENT_MAX_BODY_SIZE
            value: "40M"
          name: nginx
          ports:
          - containerPort: 80
          volumeMounts:
          - mountPath: /config
            subPath: config
            name: pod-share
          - mountPath: /var/www/html/web
            subPath: web
            name: pod-share
            readOnly: true
{% if ENVIRONMENT == 'prod' or ENVIRONMENT == 'staging' %}
          - mountPath: /var/www/html/web/sites/default/files
            name: nfs
            subPath: "{{REPO_NAME_SHORT}}/{{ENVIRONMENT}}/files"
            readOnly: true
{% endif %}

        # [cloudsql_proxy_container]
        - image: gcr.io/cloudsql-docker/gce-proxy:1.13
          name: cloudsql-proxy
          resources:
            requests:
              cpu: "20m"
              memory: "10Mi"
          command: ["/cloud_sql_proxy", "--dir=/cloudsql",
                    "-instances=kuberdrupal:europe-west4:cloudmysql=tcp:3306",
                    "-credential_file=/secrets/cloudsql/credentials.json",
                    "-verbose=false"]
          volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
          - name: cloudsql
            mountPath: /cloudsql
          - name: ssl-certs
            mountPath: /etc/ssl/certs

        # [smtpd_relay_container]
        - image: applariat/tx-smtp-relay:latest
          name: smtp
          resources:
            requests:
              cpu: "20m"
              memory: "10Mi"
          env:
          - name: TX_SMTP_RELAY_HOST
{% if ENVIRONMENT == 'prod' %}
            value: "[in-v3.mailjet.com]:587"
{% else %}
            value: "[mailhog.default.svc.cluster.local]:1025"
{% endif %}
          - name: TX_SMTP_RELAY_MYHOSTNAME
            value: "smtp-relay.e-wise.io"
          - name: TX_SMTP_RELAY_USERNAME
            valueFrom:
              secretKeyRef:
                name: smtpd-credentials
                key: username
          - name: TX_SMTP_RELAY_PASSWORD
            valueFrom:
              secretKeyRef:
                name: smtpd-credentials
                key: password

        # [Drupal {{REPO_NAME_SHORT}}]
        - image: "eu.gcr.io/{{PROJECT_ID}}/{{REPO_NAME}}/{{ENVIRONMENT}}:latest"
          imagePullPolicy: Always
          name: drupal
          resources:
            requests:
              cpu: "50m"
              memory: "512Mi"
          readinessProbe:  # Check when`the pod is ready and then replace existing pods
            httpGet:
              path: /health?readiness
              port: 80
              httpHeaders:
              - name: Host
                value: healthcheck
            initialDelaySeconds: 1
            periodSeconds: 30
            timeoutSeconds: 2
          livenessProbe:  # Check if pod needs to be killed and restarted
            httpGet:
              path: /health?liveness
              port: 80
              httpHeaders:
              - name: Host
                value: healthcheck
            initialDelaySeconds: 1
            periodSeconds: 30
            timeoutSeconds: 2
            failureThreshold: 2
          env:
            *drupal-env
          volumeMounts:
{% if ENVIRONMENT == 'prod' or ENVIRONMENT == 'staging' %}
          - mountPath: /var/www/html/web/sites/default/files
            name: nfs
            subPath: "{{REPO_NAME_SHORT}}/{{ENVIRONMENT}}/files"
          - mountPath: /var/www/html/private
            name: nfs
            subPath: "{{REPO_NAME_SHORT}}/{{ENVIRONMENT}}/private"
{% else %}
          - mountPath: /var/www/html/web/sites/default/files
            name: pod-share
            subPath: web/sites/default/files
          - mountPath: /var/www/html/private
            name: pod-share
            subPath: private
{% endif %}
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "sudo -E /usr/sbin/crond" ]

      volumes:
        - name: pod-share
          emptyDir: {}
{% if ENVIRONMENT == 'prod' or ENVIRONMENT == 'staging' %}
        - name: nfs
          persistentVolumeClaim:
            claimName: nfs
{% endif %}
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
        - name: "cloudsql-db-{{REPO_NAME_SHORT}}"
          secret:
            secretName: "cloudsql-db-{{REPO_NAME_SHORT}}"
        - name: ssl-certs
          hostPath:
            path: /etc/ssl/certs
        - name: cloudsql
          emptyDir: {}